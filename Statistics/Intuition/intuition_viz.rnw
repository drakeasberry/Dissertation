% Intuition Visualization Code

<<global_opts_intuition_viz, echo=TRUE, cache=FALSE>>=
library(knitr)
library(here)

knitr::opts_chunk$set(
  echo = FALSE
)
here::here()
set_parent(here('Asberry_Dissertation/Dissertation.Rnw'))
@

<<intuition_lib, echo = FALSE>>=
# Load Libraries
library(tidyverse)
library(ggplot2)
library(effsize)
library(xtable)

# Source Scripts containing functions
source('../../Scripts_Dissertation/diss_dataviz_script.R')
source("../../Scripts_Dissertation/analysis_functions.R")
@

<<intuition_participants, echo = FALSE>>=
# Read in file from demographics project
intuition_desc <- read_csv(
  'analyze_data/demographics/67_lab_intuition.csv')

# Create table for comparison of demographics
intuition_stat_compare <- intuition_desc %>%
  group_by(group) %>% 
  summarise(n = n(),
            Mean_age = mean(age, na.rm = TRUE),
            SD_age = sd(age, na.rm = TRUE)) %>% 
  column_to_rownames(., var = "group")
intuition_stat_compare

# create removal table with reason
intuition_remove_part <- tibble(
  partNum = c("part007", 
              "part031",
              "part058",
              "part016",
              "part033",
              "part059",
              "part027",
              "part047",
              "part052",
              "part044"), 
  reason = c("dominance", 
             "dominance", 
             "dominance",
             "vocabulary",
             "vocabulary",
             "vocabulary",
             "location",
             "location",
             "location",
             "fluency"),
  long_reason = c("L1 English with dominance score below 50",
                  "L1 Spanish with dominance score above 0",
                  "L1 Spanish with dominance score above 0",
                  "L1 Spanish lower than L2 English vocabulary",
                  "L1 Spanish lower than L2 English vocabulary",
                  "L1 Spanish lower than L2 English vocabulary",
                  "L1 Spanish born in US",
                  "L1 Spanish born and raised outside Sonora MX",
                  "L1 Spanish born in US",
                  "Fluency in Japanese, Catalan and Italian")) %>%
  arrange(partNum)

# Read in group to participant mapping
group_map <- read_csv(
  '../../Scripts_Dissertation/participant_group_map.csv')

# Create removal table to reference in manuscript
intuition_part_removal_sum <- intuition_remove_part %>% 
  left_join(., group_map) %>% 
  group_by(group, reason) %>% 
  summarise(n = n()) %>% 
  mutate(index = paste0(reason,"-",group)) %>%
  select(n, everything()) %>% 
  column_to_rownames(., var = "index")
@

<<intuition_data, echo = FALSE>>=
# read in the data
my_data_long <- 
  read_csv('analyze_data/output/data_long.csv') %>% 
  rename(prop_corr = correct,
         logit_corr = logit) %>% 
  convert_as_factor(partNum, group, syl_structure)


# Group data by group and syllable structure 
grouping_stats <- c("syl_structure", "group")

# Summary statistics for correct responses
# Stats I want to run
intuition_summary_stats <- quote(list(Median = median,
                            Mean = mean, 
                            Min = min, 
                            Max = max, 
                            SD = sd))

# Tabled results for percent correct and logit transformed values
intuition_score_compare <-  
  my_stats(my_data_long, 
           grp_col = grouping_stats, 
           sum_col = c("prop_corr","logit_corr"),
           stats = intuition_summary_stats) %>% 
  mutate(index = paste(group,syl_structure,sep = '-')) %>% 
  column_to_rownames(., var = "index")

# Create aggregations needed for stats
# Create aggregated set with one row per participant per syllable type
intuition_syl_ag <- my_data_long %>% 
  group_by(partNum, group, syl_structure) %>% 
  summarise(prop_corr = mean(prop_corr),
            logit_corr = mean(logit_corr))

# Create aggregated set with one row per participant
intuition_grp_ag <- my_data_long %>% 
  group_by(partNum, group) %>% 
  summarise(prop_corr = mean(prop_corr),
            logit_corr = mean(logit_corr))


# Create a table for referencing statistics with CIs
# CIs for proportion correct responses
intuition_syl_ci_percent <- 
  conf_int(intuition_syl_ag,
           grp_col =  grouping_stats,
           value = "prop_corr") %>% 
  mutate(index = paste(group,syl_structure,sep = '-')) %>% 
  column_to_rownames(., var = "index")

# CIs for logit transformed responses
intuition_syl_ci_logit <-
  conf_int(intuition_syl_ag,
           grp_col =  grouping_stats,
           value = "logit_corr") %>%
  mutate(index = paste(group,syl_structure,sep = '-')) %>% 
  column_to_rownames(., var = "index")

# Create a table for referencing CIs by group
intuition_lang_compare <-
  conf_int(intuition_grp_ag,
           grp_col =  "group",
           value = "logit_corr") %>%
  column_to_rownames(., var = "group")

# Create a table for referencing CIs by group
intuition_syl_compare <-
  conf_int(intuition_syl_ag,
           grp_col =  "syl_structure",
           value = "logit_corr") %>%
  column_to_rownames(., var = "syl_structure")

# Visualize Descriptive Data
# Proportion data
plt_corr_per <- my_data_long %>% 
  summary_stats(., grouping_stats, 
                "prop_corr", 
                "mean_sd") %>% 
  ggplot(aes(x = group,
             y = mean,
             fill = syl_structure)) +
  geom_bar(stat = "identity", 
           position = 'dodge') +
  geom_errorbar(aes(ymin = intuition_syl_ci_percent$LL, 
                    ymax = intuition_syl_ci_percent$UL), 
                width = 0.2, 
                alpha = 0.9, 
                position = position_dodge(width = 0.9)) +
  labs(title = "Syllabification Intuitions",
       x = "L1 Language Group",
       y = "Proportion Correct") +
  scale_fill_manual(name = "Syllable Structure", 
                    values = plt_color_2) +
  theme_minimal()
plt_corr_per

# Logit data of correct responses
plt_corr_logit <- my_data_long %>% 
  summary_stats(., grouping_stats, 
                "logit_corr", 
                "mean_sd") %>% 
  ggplot(aes(x = group,
             y = mean,
             fill = syl_structure)) +
  geom_bar(stat = "identity", position = 'dodge') +
  geom_errorbar(aes(ymin = intuition_syl_ci_logit$LL, 
                    ymax = intuition_syl_ci_logit$UL), 
                width = 0.2, 
                alpha = 0.9, 
                position = position_dodge(width = 0.9)) +
  labs(title = "Syllabification Intuitions",
       x = "L1 Language Group",
       y = "Response Correct (logit)") +
  scale_fill_manual(name = "Syllable Structure", 
                    values = plt_color_2) +
  theme_light()
plt_corr_logit
 

plt_corr_logit_sylX <- my_data_long %>% 
  summary_stats(., grouping_stats, 
                "logit_corr", 
                "mean_sd") %>% 
  ggplot(aes(x = syl_structure,
             y = mean,
             fill = group)) +
  geom_bar(stat = "identity", position = 'dodge') +
  geom_errorbar(aes(ymin = intuition_syl_ci_logit$LL, 
                    ymax = intuition_syl_ci_logit$UL), 
                width = 0.2, 
                alpha = 0.9, 
                position = position_dodge(width = 0.9)) +
  labs(title = "Syllabification Intuitions",
       x = "Syllable Structure",
       y = "Response Correct (logit)") +
  scale_fill_manual(name = "Group", 
                    values = plt_color_2) +
  theme_light()
plt_corr_logit_sylX


# Check for outliers
# Check pooled data
outlier_data <- my_data_long %>% 
  outlier_chk(., grouping_stats, "logit_corr")

# Plot data 
boxplot(my_data_long$prop_corr)
boxplot(my_data_long$logit_corr)
## no outliers visible


# Check for normality
normality_all <- my_data_long %>% 
  normality_chk(., grouping_stats, "prop_corr")
normality_all <- my_data_long %>% 
  normality_chk(., grouping_stats, "logit_corr")

# Run inferential statistics Learner group
# Run repeated measures anova
aov_intuition <- 
  aov_ez("partNum", 
         "logit_corr", 
         my_data_long, 
         within = 'syl_structure', 
         between = 'group')
aov_intuition
## Main effects of group and syllable structure
## No significant interaction 

# Create Manuscript Version
#intuition_grouping_pretty <- c("Group", "Syllable Structure")
aov_intuition_prt <- my_data_long %>% 
  rename(., c(Group = group,
              Structure = syl_structure)) %>% 
  aov_ez("partNum", 
         "logit_corr", 
         ., 
         within = "Structure", 
         between = "Group")
aov_intuition_prt

# Significant Main Effect Exploration
# Group main effect
# Welch 2 sample t.test for group main effect
t_intuition_grp_main <-
  t.test(
    my_data_long$logit_corr ~ my_data_long$group, 
    paired = FALSE)
t_intuition_grp_main
## is signficant t = -5.5641, df = 126.77, p-value = 1.497e-07
## 95% CI [-4.479941, -2.129370]

# Descriptives to check direction of effect
with(my_data_long, 
     tapply(logit_corr, 
            group, 
            FUN = mean))
## L1 English worse than L1 Spanish
## 3.184587 6.489242


# Get the size of the effect
intuition_lang_efsize <- cohen.d(
  intuition_grp_ag$logit_corr, 
  intuition_grp_ag$group, 
  na.rm = TRUE, 
  paired = FALSE)
intuition_lang_efsize
## Large effect size


# Syllable structure main effect
# Paired t.test for syllable structure main effect
t_intuition_syl_main <- t.test(
  my_data_long$logit_corr ~ my_data_long$syl_structure, 
  paired = TRUE)
t_intuition_syl_main
## is signficant t = -2.2965, df = 66, p-value = 0.02483
## 95% CI [-2.0316306, -0.1419406]
## Mean of differences -1.086786

# Descriptives to check direction of effect
with(my_data_long, 
     tapply(logit_corr, 
            syl_structure, 
            FUN = mean))
# CV are less accurate than CVC syllable
# 4.120890 5.207676

# Get the size of the effect
intuition_syl_efsize <- cohen.d(
  my_data_long$logit_corr, 
  my_data_long$syl_structure, 
  na.rm = TRUE, 
  paired = TRUE)
intuition_syl_efsize
## small effect size


# Plots
# Main effect of group
intuition_grp_main <- 
  afex_plot(aov_intuition, 
            x = "group", 
            error = "between",
            data_plot = FALSE,
            mapping = c("color", "shape")) +
  labs(title = "Estimated Marginal Means Correct Response",
       x = "L1 Language Group",
       y = "Response Correct (logit)") +
  scale_color_manual(values = plt_color_2) +
  theme_light() +
  theme(legend.position = "none")
intuition_grp_main


# Main effect of syllable structure
intuition_syl_main <- 
  afex_plot(aov_intuition, 
            x = "syl_structure", 
            error = "within",
            data_plot = FALSE,
            mapping = c("color", "shape")) +
  labs(title = "Estimated Marginal Means Syllable Structure",
       x = "Syllable Structure",
       y = "Response Correct (logit)") +
  scale_color_manual(values = plt_color_2) +
  theme_light() +
  theme(legend.position = "none")
intuition_syl_main


# Interaction between matching condition and lexicality with lexicality conditions on x-axis
intuition_grp_syl_int <- 
  afex_plot(aov_intuition, 
            x = "syl_structure", 
            trace = "group",
            error = "between",
            mapping = c("shape", "color", "linetype"),
            legend_title = "Native Language",
            data_plot = TRUE) +
  labs(title = "Estimated Marginal Means L2 Spanish",
       x = "Syllable Structure",
       y = "Response Correct (logit)") +
  scale_color_manual(values = plt_color_2)
intuition_grp_syl_int
@